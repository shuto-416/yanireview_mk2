{"ast":null,"code":"var _jsxFileName = \"/Users/hamaguchishuto/Desktop/Web/yanireview_mk2/yani/src/pages/YaniList.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport ReactMarkdown from \"react-markdown\";\nimport CircularProgress from '@mui/material/CircularProgress';\nimport remarkGfm from 'remark-gfm';\nimport './YaniList.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst loadMD = (setMarkdown, setIsLoading) => {\n  const postName = \"post\"; //このファイル実行と同時に読み込み、毎秒のロードを回避するため\n\n  import(`./${postName}.md`).then(res => {\n    fetch(res.default).then(res => res.text()).then(res => {\n      setMarkdown(res);\n      setIsLoading(false);\n    });\n  });\n};\n\nfunction YaniList() {\n  _s();\n\n  const [markdown, setMarkdown] = useState(''); //isLoading無しならここにsetTimeout時間までの初期表示書いとく\n\n  const [isLoading, setIsLoading] = useState(true); //if文表示画面条件遷移用\n\n  useEffect(() => {\n    setTimeout(() => {\n      // 指定時間(ms)後に実行\n      loadMD(setMarkdown, setIsLoading);\n    }, 1500);\n  }, []);\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: [/*#__PURE__*/_jsxDEV(CircularProgress, {\n        disableShrink: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"loading now...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mdWrap\",\n    children: /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n      children: markdown,\n      remarkPlugins: [remarkGfm]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n}\n\n_s(YaniList, \"61nEAqh556vcZ5iARRJUZ4aoyS0=\");\n\n_c = YaniList;\nexport default YaniList;\n\nvar _c;\n\n$RefreshReg$(_c, \"YaniList\");","map":{"version":3,"sources":["/Users/hamaguchishuto/Desktop/Web/yanireview_mk2/yani/src/pages/YaniList.tsx"],"names":["useEffect","useState","ReactMarkdown","CircularProgress","remarkGfm","loadMD","setMarkdown","setIsLoading","postName","then","res","fetch","default","text","YaniList","markdown","isLoading","setTimeout"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,aAAP,MAA0B,gBAA1B;AACA,OAAOC,gBAAP,MAA6B,gCAA7B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAO,iBAAP;;;AAEA,MAAMC,MAAM,GAAG,CAACC,WAAD,EAAwBC,YAAxB,KAAyD;AACpE,QAAMC,QAAQ,GAAG,MAAjB,CADoE,CAC5C;;AACxB,SAAQ,KAAIA,QAAS,KAArB,EACKC,IADL,CACUC,GAAG,IAAI;AACTC,IAAAA,KAAK,CAACD,GAAG,CAACE,OAAL,CAAL,CACKH,IADL,CACUC,GAAG,IAAIA,GAAG,CAACG,IAAJ,EADjB,EAEKJ,IAFL,CAEUC,GAAG,IAAI;AACTJ,MAAAA,WAAW,CAACI,GAAD,CAAX;AACAH,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACH,KALL;AAMH,GARL;AASH,CAXD;;AAcA,SAASO,QAAT,GAAoB;AAAA;;AAChB,QAAM,CAACC,QAAD,EAAWT,WAAX,IAA0BL,QAAQ,CAAS,EAAT,CAAxC,CADgB,CACqC;;AACrD,QAAM,CAACe,SAAD,EAAYT,YAAZ,IAA4BN,QAAQ,CAAU,IAAV,CAA1C,CAFgB,CAE0C;;AAE1DD,EAAAA,SAAS,CAAC,MAAM;AACZiB,IAAAA,UAAU,CAAC,MAAM;AAAE;AACfZ,MAAAA,MAAM,CAACC,WAAD,EAAcC,YAAd,CAAN;AACH,KAFS,EAEP,IAFO,CAAV;AAGH,GAJQ,EAIN,EAJM,CAAT;;AAMA,MAAGS,SAAH,EAAc;AACV,wBACI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,8BACI,QAAC,gBAAD;AAAkB,QAAA,aAAa;AAA/B;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAMH;;AAED,sBACI;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA,2BACI,QAAC,aAAD;AAAe,MAAA,QAAQ,EAAED,QAAzB;AAAmC,MAAA,aAAa,EAAE,CAACX,SAAD;AAAlD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;GAxBQU,Q;;KAAAA,Q;AA0BT,eAAeA,QAAf","sourcesContent":["import { useEffect, useState } from \"react\"\nimport ReactMarkdown from \"react-markdown\"\nimport CircularProgress from '@mui/material/CircularProgress'\nimport remarkGfm from 'remark-gfm'\nimport './YaniList.scss'\n\nconst loadMD = (setMarkdown: Function, setIsLoading: Function): void => {\n    const postName = \"post\" //このファイル実行と同時に読み込み、毎秒のロードを回避するため\n    import(`./${postName}.md`)\n        .then(res => {\n            fetch(res.default)\n                .then(res => res.text())\n                .then(res => {\n                    setMarkdown(res)\n                    setIsLoading(false)\n                })\n        })\n}\n\n\nfunction YaniList() {\n    const [markdown, setMarkdown] = useState<string>('') //isLoading無しならここにsetTimeout時間までの初期表示書いとく\n    const [isLoading, setIsLoading] = useState<boolean>(true) //if文表示画面条件遷移用\n\n    useEffect(() => {\n        setTimeout(() => { // 指定時間(ms)後に実行\n            loadMD(setMarkdown, setIsLoading)\n        }, 1500);\n    }, [])\n\n    if(isLoading) {\n        return (\n            <div className=\"loading\">\n                <CircularProgress disableShrink />\n                <h2>loading now...</h2>\n            </div>\n        )\n    }\n\n    return (\n        <div className=\"mdWrap\">\n            <ReactMarkdown children={markdown} remarkPlugins={[remarkGfm]} />\n        </div>\n    )\n}\n\nexport default YaniList"]},"metadata":{},"sourceType":"module"}