{"version":3,"sources":["../../src/slider.tsx"],"names":["name","errorMessage","SliderProvider","useSliderContext","Slider","props","ref","styles","ownProps","direction","getInputProps","getRootProps","context","rootProps","inputProps","rootStyles","display","position","cursor","container","children","defaultProps","orientation","__DEV__","displayName","SliderThumb","getThumbProps","thumbStyles","alignItems","justifyContent","outline","thumb","thumbProps","className","SliderTrack","getTrackProps","trackStyles","overflow","track","trackProps","SliderFilledTrack","getInnerTrackProps","width","height","filledTrack","SliderMark","getMarkerProps","markProps"],"mappings":"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","sourcesContent":["import {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  StylesProvider,\n  SystemStyleObject,\n  ThemingProps,\n  useMultiStyleConfig,\n  useStyles,\n  HTMLChakraProps,\n  useTheme,\n} from \"@chakra-ui/system\"\nimport { cx, __DEV__ } from \"@chakra-ui/utils\"\nimport { createContext } from \"@chakra-ui/react-utils\"\nimport * as React from \"react\"\nimport { useSlider, UseSliderProps, UseSliderReturn } from \"./use-slider\"\n\ninterface SliderContext\n  extends Omit<UseSliderReturn, \"getInputProps\" | \"getRootProps\"> {}\n\nconst [SliderProvider, useSliderContext] = createContext<SliderContext>({\n  name: \"SliderContext\",\n  errorMessage:\n    \"useSliderContext: `context` is undefined. Seems you forgot to wrap all slider components within <Slider />\",\n})\n\nexport { SliderProvider, useSliderContext }\n\ntype Omitted = \"size\" | \"defaultValue\" | \"onChange\"\nexport interface SliderProps\n  extends UseSliderProps,\n    ThemingProps<\"Slider\">,\n    Omit<HTMLChakraProps<\"div\">, Omitted> {}\n\n/**\n * The Slider is used to allow users to make selections from a range of values.\n * It provides context and functionality for all slider components\n *\n * @see Docs     https://chakra-ui.com/docs/form/slider\n * @see WAI-ARIA https://www.w3.org/TR/wai-aria-practices/#slider\n */\nexport const Slider = forwardRef<SliderProps, \"div\">((props, ref) => {\n  const styles = useMultiStyleConfig(\"Slider\", props)\n  const ownProps = omitThemingProps(props)\n  const { direction } = useTheme()\n  ownProps.direction = direction\n\n  const { getInputProps, getRootProps, ...context } = useSlider(ownProps)\n\n  const rootProps = getRootProps()\n  const inputProps = getInputProps({}, ref)\n\n  const rootStyles: SystemStyleObject = {\n    display: \"inline-block\",\n    position: \"relative\",\n    cursor: \"pointer\",\n    ...styles.container,\n  }\n\n  return (\n    <SliderProvider value={context}>\n      <StylesProvider value={styles}>\n        <chakra.div {...rootProps} className=\"chakra-slider\" __css={rootStyles}>\n          {props.children}\n          <input {...inputProps} />\n        </chakra.div>\n      </StylesProvider>\n    </SliderProvider>\n  )\n})\n\nSlider.defaultProps = {\n  orientation: \"horizontal\",\n}\n\nif (__DEV__) {\n  Slider.displayName = \"Slider\"\n}\n\nexport interface SliderThumbProps extends HTMLChakraProps<\"div\"> {}\n\n/**\n * Slider component that acts as the handle used to select predefined\n * values by dragging its handle along the track\n */\nexport const SliderThumb = forwardRef<SliderThumbProps, \"div\">((props, ref) => {\n  const { getThumbProps } = useSliderContext()\n\n  const styles = useStyles()\n\n  const thumbStyles: SystemStyleObject = {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    position: \"absolute\",\n    outline: 0,\n    ...styles.thumb,\n  }\n\n  const thumbProps = getThumbProps(props, ref)\n\n  return (\n    <chakra.div\n      {...thumbProps}\n      className={cx(\"chakra-slider__thumb\", props.className)}\n      __css={thumbStyles}\n    />\n  )\n})\n\nif (__DEV__) {\n  SliderThumb.displayName = \"SliderThumb\"\n}\n\nexport interface SliderTrackProps extends HTMLChakraProps<\"div\"> {}\n\nexport const SliderTrack = forwardRef<SliderTrackProps, \"div\">((props, ref) => {\n  const { getTrackProps } = useSliderContext()\n\n  const styles = useStyles()\n  const trackStyles = {\n    overflow: \"hidden\",\n    ...styles.track,\n  }\n\n  const trackProps = getTrackProps(props, ref)\n\n  return (\n    <chakra.div\n      {...trackProps}\n      className={cx(\"chakra-slider__track\", props.className)}\n      __css={trackStyles}\n    />\n  )\n})\n\nif (__DEV__) {\n  SliderTrack.displayName = \"SliderTrack\"\n}\n\nexport interface SliderInnerTrackProps extends HTMLChakraProps<\"div\"> {}\n\nexport const SliderFilledTrack = forwardRef<SliderInnerTrackProps, \"div\">(\n  (props, ref) => {\n    const { getInnerTrackProps } = useSliderContext()\n\n    const styles = useStyles()\n    const trackStyles = {\n      width: \"inherit\",\n      height: \"inherit\",\n      ...styles.filledTrack,\n    }\n\n    const trackProps = getInnerTrackProps(props, ref)\n\n    return (\n      <chakra.div\n        {...trackProps}\n        className=\"chakra-slider__filled-track\"\n        __css={trackStyles}\n      />\n    )\n  },\n)\n\nif (__DEV__) {\n  SliderFilledTrack.displayName = \"SliderFilledTrack\"\n}\n\nexport interface SliderMarkProps extends HTMLChakraProps<\"div\"> {\n  value: number\n}\n\n/**\n * SliderMark is used to provide names for specific Slider\n * values by defining labels or markers along the track.\n *\n * @see Docs https://chakra-ui.com/slider\n */\nexport const SliderMark = forwardRef<SliderMarkProps, \"div\">((props, ref) => {\n  const { getMarkerProps } = useSliderContext()\n  const markProps = getMarkerProps(props, ref)\n  return (\n    <chakra.div\n      {...markProps}\n      className={cx(\"chakra-slider__marker\", props.className)}\n    />\n  )\n})\n\nif (__DEV__) {\n  SliderMark.displayName = \"SliderMark\"\n}\n"],"file":"slider.js"}