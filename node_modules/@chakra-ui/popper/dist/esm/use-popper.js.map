{"version":3,"sources":["../../src/use-popper.ts"],"names":["mergeRefs","createPopper","useCallback","useEffect","useRef","customModifiers","getPopperPlacement","cssVars","getEventListenerOptions","usePopper","props","enabled","modifiers","placement","placementProp","strategy","arrowPadding","eventListeners","offset","gutter","flip","boundary","preventOverflow","matchWidth","direction","reference","popper","instance","cleanup","setupPopper","current","innerArrow","positionArrow","transformOrigin","name","options","padding","forceUpdate","destroy","referenceRef","node","getReferenceProps","ref","popperRef","getPopperProps","style","position","minWidth","inset","getArrowProps","rest","getArrowStyle","getArrowInnerProps","update","varRef","size","shadowColor","bg","computedStyle"],"mappings":"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","sourcesContent":["import { mergeRefs, PropGetterV2 } from \"@chakra-ui/react-utils\"\nimport {\n  createPopper,\n  Instance,\n  Modifier,\n  VirtualElement,\n} from \"@popperjs/core\"\nimport { useCallback, useEffect, useRef } from \"react\"\nimport * as customModifiers from \"./modifiers\"\nimport { getPopperPlacement, PlacementWithLogical } from \"./popper.placement\"\nimport { cssVars, getEventListenerOptions } from \"./utils\"\n\nexport interface UsePopperProps {\n  /**\n   * Whether the popper.js should be enabled\n   */\n  enabled?: boolean\n  /**\n   * The main and cross-axis offset to displace popper element\n   * from its reference element.\n   */\n  offset?: [crossAxis: number, mainAxis: number]\n  /**\n   * The distance or margin between the reference and popper.\n   * It is used internally to create an `offset` modifier.\n   *\n   * NB: If you define `offset` prop, it'll override the gutter.\n   * @default 8\n   */\n  gutter?: number\n  /**\n   * If `true`, will prevent the popper from being cut off and ensure\n   * it's visible within the boundary area.\n   * @default true\n   */\n  preventOverflow?: boolean\n  /**\n   * If `true`, the popper will change its placement and flip when it's\n   * about to overflow its boundary area.\n   * @default true\n   */\n  flip?: boolean\n  /**\n   * If `true`, the popper will match the width of the reference at all times.\n   * It's useful for `autocomplete`, `date-picker` and `select` patterns.\n   */\n  matchWidth?: boolean\n  /**\n   * The boundary area for the popper. Used within the `preventOverflow` modifier\n   * @default \"clippingParents\"\n   */\n  boundary?: \"clippingParents\" | \"scrollParent\" | HTMLElement\n  /**\n   * If provided, determines whether the popper will reposition itself on `scroll`\n   * and `resize` of the window.\n   */\n  eventListeners?: boolean | { scroll?: boolean; resize?: boolean }\n  /**\n   * The padding required to prevent the arrow from\n   * reaching the very edge of the popper.\n   * @default 8\n   */\n  arrowPadding?: number\n  /**\n   * The CSS positioning strategy to use.\n   * @default \"absolute\"\n   */\n  strategy?: \"absolute\" | \"fixed\"\n  /**\n   * The placement of the popper relative to its reference.\n   * @default \"bottom\"\n   */\n  placement?: PlacementWithLogical\n  /**\n   * Array of popper.js modifiers. Check the docs to see\n   * the list of possible modifiers you can pass.\n   *\n   * @see Docs https://popper.js.org/docs/v2/modifiers/\n   */\n  modifiers?: Array<Partial<Modifier<string, any>>>\n\n  /**\n   * Theme direction `ltr` or `rtl`. Popper's placement will\n   * be set accordingly\n   * @default \"ltr\"\n   */\n  direction?: \"ltr\" | \"rtl\"\n}\n\nexport type ArrowCSSVarProps = {\n  /**\n   * The size of the popover arrow.\n   * This sets the `--popper-arrow-size` css property\n   */\n  size?: string | number\n  /**\n   * The box-shadow color of the popover arrow.\n   * This sets the `--popper-arrow-shadow-color` css property\n   */\n  shadowColor?: string\n  /**\n   * The background color of teh popper arrow.\n   * This sets the `--popper-arrow-bg` css property.\n   */\n  bg?: string\n}\n\nexport function usePopper(props: UsePopperProps = {}) {\n  const {\n    enabled = true,\n    modifiers = [],\n    placement: placementProp = \"bottom\",\n    strategy = \"absolute\",\n    arrowPadding = 8,\n    eventListeners = true,\n    offset,\n    gutter = 8,\n    flip = true,\n    boundary = \"clippingParents\",\n    preventOverflow = true,\n    matchWidth,\n    direction = \"ltr\",\n  } = props\n\n  const reference = useRef<Element | VirtualElement | null>(null)\n  const popper = useRef<HTMLElement | null>(null)\n  const instance = useRef<Instance | null>(null)\n  const placement = getPopperPlacement(placementProp, direction)\n\n  const cleanup = useRef(() => {})\n\n  const setupPopper = useCallback(() => {\n    if (!enabled || !reference.current || !popper.current) return\n\n    // If popper instance exists, destroy it so we can create a new one\n    cleanup.current?.()\n\n    instance.current = createPopper(reference.current, popper.current, {\n      placement,\n      modifiers: [\n        customModifiers.innerArrow,\n        customModifiers.positionArrow,\n        customModifiers.transformOrigin,\n        { ...customModifiers.matchWidth, enabled: !!matchWidth },\n        {\n          name: \"eventListeners\",\n          ...getEventListenerOptions(eventListeners),\n        },\n        {\n          name: \"arrow\",\n          options: { padding: arrowPadding },\n        },\n        {\n          name: \"offset\",\n          options: {\n            offset: offset ?? [0, gutter],\n          },\n        },\n        {\n          name: \"flip\",\n          enabled: !!flip,\n          options: { padding: 8 },\n        },\n        {\n          name: \"preventOverflow\",\n          enabled: !!preventOverflow,\n          options: { boundary },\n        },\n        // allow users override internal modifiers\n        ...modifiers,\n      ],\n      strategy,\n    })\n\n    // force update one-time to fix any positioning issues\n    instance.current.forceUpdate()\n\n    cleanup.current = instance.current.destroy\n  }, [\n    placement,\n    enabled,\n    modifiers,\n    matchWidth,\n    eventListeners,\n    arrowPadding,\n    offset,\n    gutter,\n    flip,\n    preventOverflow,\n    boundary,\n    strategy,\n  ])\n\n  useEffect(() => {\n    return () => {\n      /**\n       * Fast refresh might call this function and tear down the popper\n       * even if the reference still exists. This checks against that\n       */\n      if (!reference.current && !popper.current) {\n        instance.current?.destroy()\n        instance.current = null\n      }\n    }\n  }, [])\n\n  const referenceRef = useCallback(\n    <T extends Element | VirtualElement>(node: T | null) => {\n      reference.current = node\n      setupPopper()\n    },\n    [setupPopper],\n  )\n\n  const getReferenceProps = useCallback<PropGetterV2<\"button\">>(\n    (props = {}, ref = null) => ({\n      ...props,\n      ref: mergeRefs(referenceRef, ref),\n    }),\n    [referenceRef],\n  )\n\n  const popperRef = useCallback(\n    <T extends HTMLElement>(node: T | null) => {\n      popper.current = node\n      setupPopper()\n    },\n    [setupPopper],\n  )\n\n  const getPopperProps = useCallback<PropGetterV2<\"div\">>(\n    (props = {}, ref = null) => ({\n      ...props,\n      ref: mergeRefs(popperRef, ref),\n      style: {\n        ...props.style,\n        position: strategy,\n        minWidth: \"max-content\",\n        inset: \"0 auto auto 0\",\n      },\n    }),\n    [strategy, popperRef],\n  )\n\n  const getArrowProps = useCallback<PropGetterV2<\"div\", ArrowCSSVarProps>>(\n    (props = {}, ref = null) => {\n      const { size, shadowColor, bg, style, ...rest } = props\n      return {\n        ...rest,\n        ref,\n        \"data-popper-arrow\": \"\",\n        style: getArrowStyle(props),\n      }\n    },\n    [],\n  )\n\n  const getArrowInnerProps = useCallback<PropGetterV2<\"div\">>(\n    (props = {}, ref = null) => ({\n      ...props,\n      ref,\n      \"data-popper-arrow-inner\": \"\",\n    }),\n    [],\n  )\n\n  return {\n    update() {\n      instance.current?.update()\n    },\n    forceUpdate() {\n      instance.current?.forceUpdate()\n    },\n    transformOrigin: cssVars.transformOrigin.varRef,\n    referenceRef,\n    popperRef,\n    getPopperProps,\n    getArrowProps,\n    getArrowInnerProps,\n    getReferenceProps,\n  }\n}\n\nfunction getArrowStyle(props: any) {\n  const { size, shadowColor, bg, style } = props\n  const computedStyle = { ...style, position: \"absolute\" }\n  if (size) {\n    computedStyle[\"--popper-arrow-size\"] = size\n  }\n  if (shadowColor) {\n    computedStyle[\"--popper-arrow-shadow-color\"] = shadowColor\n  }\n  if (bg) {\n    computedStyle[\"--popper-arrow-bg\"] = bg\n  }\n  return computedStyle\n}\n\nexport type UsePopperReturn = ReturnType<typeof usePopper>\n"],"file":"use-popper.js"}