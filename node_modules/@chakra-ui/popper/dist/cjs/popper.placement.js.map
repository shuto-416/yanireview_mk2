{"version":3,"sources":["../../src/popper.placement.ts"],"names":["logicals","ltr","rtl","start","end","opposites","getPopperPlacement","placement","dir","value"],"mappings":";;;;AAcA,IAAMA,QAA6D,GAAG;AACpE,iBAAe;AAAEC,IAAAA,GAAG,EAAE,YAAP;AAAqBC,IAAAA,GAAG,EAAE;AAA1B,GADqD;AAEpE,eAAa;AAAED,IAAAA,GAAG,EAAE,UAAP;AAAmBC,IAAAA,GAAG,EAAE;AAAxB,GAFuD;AAGpE,eAAa;AAAED,IAAAA,GAAG,EAAE,aAAP;AAAsBC,IAAAA,GAAG,EAAE;AAA3B,GAHuD;AAIpE,aAAW;AAAED,IAAAA,GAAG,EAAE,WAAP;AAAoBC,IAAAA,GAAG,EAAE;AAAzB,GAJyD;AAKpEC,EAAAA,KAAK,EAAE;AAAEF,IAAAA,GAAG,EAAE,MAAP;AAAeC,IAAAA,GAAG,EAAE;AAApB,GAL6D;AAMpEE,EAAAA,GAAG,EAAE;AAAEH,IAAAA,GAAG,EAAE,OAAP;AAAgBC,IAAAA,GAAG,EAAE;AAArB;AAN+D,CAAtE;AASA,IAAMG,SAAgD,GAAG;AACvD,gBAAc,UADyC;AAEvD,cAAY,YAF2C;AAGvD,eAAa,SAH0C;AAIvD,aAAW,WAJ4C;AAKvD,kBAAgB,YALuC;AAMvD,gBAAc;AANyC,CAAzD;;AASO,SAASC,kBAAT,CACLC,SADK,EAELC,GAFK,EAGM;AAAA;;AAAA,MADXA,GACW;AADXA,IAAAA,GACW,GADU,KACV;AAAA;;AACX,MAAMC,KAAK,GAAI,wBAAAT,QAAQ,CAACO,SAAD,CAAR,yCAAsBC,GAAtB,MAA8BD,SAA7C;AACA,MAAIC,GAAG,KAAK,KAAZ,EAAmB,OAAOC,KAAP;AACnB,iCAAOJ,SAAS,CAACE,SAAD,CAAhB,mCAA+BE,KAA/B;AACD","sourcesContent":["import type { Placement } from \"@popperjs/core\"\n\ntype Logical =\n  | \"start-start\"\n  | \"start-end\"\n  | \"end-start\"\n  | \"end-end\"\n  | \"start\"\n  | \"end\"\n\ntype PlacementWithLogical = Placement | Logical\n\nexport type { Placement, PlacementWithLogical }\n\nconst logicals: Record<Logical, { ltr: Placement; rtl: Placement }> = {\n  \"start-start\": { ltr: \"left-start\", rtl: \"right-start\" },\n  \"start-end\": { ltr: \"left-end\", rtl: \"right-end\" },\n  \"end-start\": { ltr: \"right-start\", rtl: \"left-start\" },\n  \"end-end\": { ltr: \"right-end\", rtl: \"left-end\" },\n  start: { ltr: \"left\", rtl: \"right\" },\n  end: { ltr: \"right\", rtl: \"left\" },\n}\n\nconst opposites: Partial<Record<Placement, Placement>> = {\n  \"auto-start\": \"auto-end\",\n  \"auto-end\": \"auto-start\",\n  \"top-start\": \"top-end\",\n  \"top-end\": \"top-start\",\n  \"bottom-start\": \"bottom-end\",\n  \"bottom-end\": \"bottom-start\",\n}\n\nexport function getPopperPlacement(\n  placement: PlacementWithLogical,\n  dir: \"ltr\" | \"rtl\" = \"ltr\",\n): Placement {\n  const value = (logicals[placement]?.[dir] || placement) as Placement\n  if (dir === \"ltr\") return value\n  return opposites[placement] ?? value\n}\n"],"file":"popper.placement.js"}