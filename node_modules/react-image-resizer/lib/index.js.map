{"version":3,"sources":["../src/index.js"],"names":["Image","props","resizeImage","target","findDOMNode","refs","image","originalWidth","HTMLImageElement","naturalWidth","originalHeight","naturalHeight","widthRatio","width","heightRatio","height","setState","showNoImage","noImageSrc","undefined","isNoImage","state","style","wrapper","position","backgroundColor","display","left","top","wrapperStyle","noImageAlt","src","alt","Component"],"mappings":";;;;;;;;AACA;;;;AACA;;;;AACA;;;;;;;;;;;;IAmBqBA,K;;;AACnB,iBAAYC,KAAZ,EAA0B;AAAA;;AAAA,8GAClBA,KADkB;;AAAA,UAS1BC,WAT0B,GASZ,YAAM;AAClB,UAAMC,SAAS,mBAASC,WAAT,CAAqB,MAAKC,IAAL,CAAUC,KAA/B,CAAf;AACA,UAAIH,WAAW,IAAf,EAAqB;AACnB;AACD;AACD,UAAMI,gBAAgBJ,kBAAkBK,gBAAlB,GAAqCL,OAAOM,YAA5C,GAA2D,CAAjF;AACA,UAAMC,iBAAiBP,kBAAkBK,gBAAlB,GAAqCL,OAAOQ,aAA5C,GAA4D,CAAnF;AACA,UAAMC,aAAa,MAAKX,KAAL,CAAWY,KAAX,GAAmBN,aAAtC;AACA,UAAMO,cAAc,MAAKb,KAAL,CAAWc,MAAX,GAAoBL,cAAxC;AACA,UAAIE,aAAaE,WAAjB,EAA8B;AAC5B,cAAKE,QAAL,CAAc;AACZH,iBAAON,gBAAgBK,UADX;AAEZG,kBAAQL,iBAAiBE;AAFb,SAAd;AAID,OALD,MAKO;AACL,cAAKI,QAAL,CAAc;AACZH,iBAAON,gBAAgBO,WADX;AAEZC,kBAAQL,iBAAiBI;AAFb,SAAd;AAID;AACF,KA7ByB;;AAAA,UA+B1BG,WA/B0B,GA+BZ,YAAM;AAClB,UAAI,MAAKhB,KAAL,CAAWiB,UAAX,IAAyBC,SAA7B,EAAwC;AACtC;AACD;AACD,YAAKH,QAAL,CAAc;AACZI,mBAAW;AADC,OAAd;AAGD,KAtCyB;;AAExB,UAAKC,KAAL,GAAa;AACXR,aAAO,CADI;AAEXE,cAAQ,CAFG;AAGXK,iBAAW;AAHA,KAAb;AAFwB;AAOzB;;;;6BAiCQ;AACP,UAAME,QAAQ;AACZC,iBAAS;AACPC,oBAAU,UADH;AAEPX,iBAAO,KAAKZ,KAAL,CAAWY,KAFX;AAGPE,kBAAQ,KAAKd,KAAL,CAAWc,MAHZ;AAIPU,2BAAiB,KAAKxB,KAAL,CAAWwB;AAJrB,SADG;AAOZnB,eAAO;AACLkB,oBAAU,UADL;AAELE,mBAAS,OAFJ;AAGLC,gBAAM,CAAC,KAAK1B,KAAL,CAAWY,KAAX,GAAmB,KAAKQ,KAAL,CAAWR,KAA/B,IAAwC,CAHzC;AAILe,eAAK,CAAC,KAAK3B,KAAL,CAAWc,MAAX,GAAoB,KAAKM,KAAL,CAAWN,MAAhC,IAA0C,CAJ1C;AAKLF,iBAAO,KAAKQ,KAAL,CAAWR,KALb;AAMLE,kBAAQ,KAAKM,KAAL,CAAWN;AANd;AAPK,OAAd;AAgBA,UAAMc,eAAe,KAAK5B,KAAL,CAAWqB,KAAX,GAAmB,qBAAE,KAAKrB,KAAL,CAAWqB,KAAb,EAAoBA,MAAMC,OAA1B,CAAnB,GAAwDD,MAAMC,OAAnF;AACA,UAAI,KAAKF,KAAL,CAAWD,SAAf,EAA0B;AACxB,eACE;AAAA;AAAA,YAAK,OAAOS,YAAZ;AACE;AACE,iBAAI,OADN,EACc,KAAK,KAAK5B,KAAL,CAAWiB,UAD9B,EAC0C,KAAK,KAAKjB,KAAL,CAAW6B,UAAX,IAAyB,SADxE,EACmF,OAAOR,MAAMhB,KADhG;AAEE,oBAAQ,KAAKJ;AAFf;AADF,SADF;AAQD,OATD,MASO;AACL,eACE;AAAA;AAAA,YAAK,OAAO2B,YAAZ;AACE;AACE,iBAAI,OADN,EACc,KAAK,KAAK5B,KAAL,CAAW8B,GAD9B,EACmC,KAAK,KAAK9B,KAAL,CAAW+B,GADnD,EACwD,OAAOV,MAAMhB,KADrE;AAEE,oBAAQ,KAAKJ,WAFf;AAGE,qBAAS,KAAKe;AAHhB;AADF,SADF;AASD;AACF;;;;EA/EgC,gBAAMgB,S;;kBAApBjC,K","file":"index.js","sourcesContent":["// @flow\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport m from './utils';\n\ntype Props = {\n  src: string;\n  width: number;\n  height: number;\n  alt?: string;\n  backgroundColor?: string;\n  style?: Object;\n  noImageSrc?: string;\n  noImageAlt?: string;\n}\n\ntype State = {\n  width: number;\n  height: number;\n  isNoImage: boolean;\n}\n\nexport default class Image extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      width: 0,\n      height: 0,\n      isNoImage: false,\n    };\n  }\n\n  resizeImage = () => {\n    const target = ReactDOM.findDOMNode(this.refs.image);\n    if (target === null) {\n      return;\n    }\n    const originalWidth = target instanceof HTMLImageElement ? target.naturalWidth : 0;\n    const originalHeight = target instanceof HTMLImageElement ? target.naturalHeight : 0;\n    const widthRatio = this.props.width / originalWidth;\n    const heightRatio = this.props.height / originalHeight;\n    if (widthRatio < heightRatio) {\n      this.setState({\n        width: originalWidth * widthRatio,\n        height: originalHeight * widthRatio,\n      });\n    } else {\n      this.setState({\n        width: originalWidth * heightRatio,\n        height: originalHeight * heightRatio,\n      });\n    }\n  }\n\n  showNoImage = () => {\n    if (this.props.noImageSrc == undefined) {\n      return;\n    }\n    this.setState({\n      isNoImage: true,\n    });\n  }\n\n  render() {\n    const style = {\n      wrapper: {\n        position: 'relative',\n        width: this.props.width,\n        height: this.props.height,\n        backgroundColor: this.props.backgroundColor,\n      },\n      image: {\n        position: 'absolute',\n        display: 'block',\n        left: (this.props.width - this.state.width) / 2,\n        top: (this.props.height - this.state.height) / 2,\n        width: this.state.width,\n        height: this.state.height,\n      },\n    };\n    const wrapperStyle = this.props.style ? m(this.props.style, style.wrapper) : style.wrapper;\n    if (this.state.isNoImage) {\n      return (\n        <div style={wrapperStyle}>\n          <img\n            ref=\"image\" src={this.props.noImageSrc} alt={this.props.noImageAlt || 'noimage'} style={style.image}\n            onLoad={this.resizeImage}\n          />\n        </div>\n      );\n    } else {\n      return (\n        <div style={wrapperStyle}>\n          <img\n            ref=\"image\" src={this.props.src} alt={this.props.alt} style={style.image}\n            onLoad={this.resizeImage}\n            onError={this.showNoImage}\n          />\n        </div>\n      );\n    }\n  }\n}\n"]}